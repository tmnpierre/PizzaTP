@page "/pizza"

<h1>Commande de Pizza</h1>

<div class="container mt-4">
    <div class="custom-control custom-switch mb-3">
        <input type="checkbox" class="custom-control-input" id="adminMode" @bind="isAdmin">
        <label class="custom-control-label" for="adminMode">Mode Admin</label>
    </div>

    <div class="row">
        <div class="col-md-8">
            @foreach (var pizza in FakeDB.completePizzas)
            {
                <div class="card mb-3">
                    <div class="row no-gutters">
                        <div class="col-md-4">
                            <img src="@pizza.ImageLink" class="card-img" alt="@pizza.Name" />
                        </div>
                        <div class="col-md-8">
                            <div class="card-body">
                                @if (editPizzaId == pizza.Id)
                                {
                                    <input @bind="pizza.Name" class="form-control mb-2" />
                                    <input type="number" @bind="pizza.Price" class="form-control mb-2" />
                                    <button class="btn btn-success mb-2" @onclick="() => SavePizza(pizza)">Sauvegarder</button>
                                    <button class="btn btn-secondary" @onclick="CancelEdit">Annuler</button>
                                }
                                else
                                {
                                    <h5 class="card-title">@pizza.Name</h5>
                                    <p class="card-text">@string.Join(", ", pizza.Ingredients.Select(i => i.Name))</p>
                                    <p class="card-text"><small class="text-muted">@pizza.Price.ToString("C")</small></p>
                                    @if (isAdmin)
                                    {
                                        <button class="btn btn-info" @onclick="() => EditPizza(pizza)">Modifier</button>
                                        <button class="btn btn-danger" @onclick="() => DeletePizza(pizza)">Supprimer</button>
                                    }
                                    else
                                    {
                                        <button class="btn btn-primary" @onclick="() => AddToCart(pizza)">Ajouter au panier</button>
                                    }
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
            @if (isAdmin && ShowAddPizzaForm)
            {
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Ajouter une nouvelle pizza</h5>
                        <input type="text" class="form-control mb-2" placeholder="Name" @bind="newPizza.Name">
                        <input type="number" class="form-control mb-2" placeholder="Price" @bind="newPizza.Price">
                        <input type="text" class="form-control mb-2" placeholder="Image Link" @bind="newPizza.ImageLink">
                        <button class="btn btn-primary" @onclick="AddPizza">Ajouter Pizza</button>
                    </div>
                </div>
            }
            <button class="btn btn-success mt-3" @onclick="() => ShowAddPizzaForm = !ShowAddPizzaForm">Ajouter une nouvelle pizza</button>
        </div>

        <div class="col-md-4">
            <h2>Panier</h2>
            <button class="btn btn-danger mb-2" @onclick="ClearCart">Vider le panier</button>
            @if (cartItems.Count == 0)
            {
                <p>Panier vide</p>
            }
            else
            {
                <ul class="list-group mb-3">
                    @foreach (var item in cartItems)
                    {
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            @item.Pizza.Name
                            <span>@item.Quantity x @item.Pizza.Price.ToString("C")</span>
                        </li>
                    }
                </ul>
                <p><strong>Total:</strong> @cartItems.Sum(item => item.Pizza.Price * item.Quantity).ToString("C")</p>
            }
        </div>
    </div>
</div>

@code {
    private bool isAdmin = false;
    private bool ShowAddPizzaForm = false;
    private Pizza newPizza = new Pizza();
    private List<CartItem> cartItems = new List<CartItem>();
    private int editPizzaId = -1;

    private void AddToCart(Pizza pizzaToAdd)
    {
        var cartItem = cartItems.FirstOrDefault(ci => ci.Pizza.Id == pizzaToAdd.Id);
        if (cartItem != null)
        {
            cartItem.Quantity++;
        }
        else
        {
            cartItems.Add(new CartItem { Pizza = pizzaToAdd, Quantity = 1 });
        }
    }

    private void ClearCart() => cartItems.Clear();

    private void AddPizza()
    {
        FakeDB.completePizzas.Add(new Pizza
            {
                Id = FakeDB.completePizzas.Any() ? FakeDB.completePizzas.Max(p => p.Id) + 1 : 1,
                Name = newPizza.Name,
                Price = newPizza.Price,
                Ingredients = new List<Ingredient>(),
                ImageLink = newPizza.ImageLink
            });
        newPizza = new Pizza();
        ShowAddPizzaForm = false;
    }

    private void EditPizza(Pizza pizza) => editPizzaId = pizza.Id;

    private void SavePizza(Pizza pizza) => editPizzaId = -1;

    private void CancelEdit() => editPizzaId = -1;

    private void DeletePizza(Pizza pizzaToDelete)
    {
        FakeDB.completePizzas.Remove(pizzaToDelete);
        if (editPizzaId == pizzaToDelete.Id) editPizzaId = -1;
    }

    public static class FakeDB
    {
        public static readonly List<Pizza> completePizzas = new List<Pizza>()
        {
            new Pizza{ Id =1, Name ="Bacon", Price = 12, Ingredients = new List<Ingredient>(){
                new () {Id = 1, PizzaId = 1, Name = "bacon" },
                new () {Id = 2, PizzaId = 1, Name = "mozzarella"},
                new () {Id = 3, PizzaId = 1, Name = "champignon"},
                new () {Id = 4, PizzaId = 1, Name = "emmental" },
            }, ImageLink = "/images/bacon.jpg"  },
            new Pizza{ Id =2, Name ="4 fromages", Price= 11, Ingredients = new List<Ingredient>(){
                new () {Id = 5, PizzaId = 2, Name = "cantal"},
                new () {Id = 6, PizzaId = 2, Name = "mozzarella"},
                new () {Id = 7, PizzaId = 2, Name = "fromage de chèvre" },
                new () {Id = 8, PizzaId = 2, Name = "gruyère" },
            }, ImageLink = "/images/cheese.jpg"  },
            new Pizza{ Id =3, Name ="Margherita", Price = 10, Ingredients = new List<Ingredient>(){
                new () {Id = 9, PizzaId = 3, Name = "sauce tomate" },
                new () {Id = 10, PizzaId = 3, Name = "mozzarella"},
                new () {Id = 11, PizzaId = 3, Name = "basilic" },
            }, ImageLink = "/images/margherita.jpg"  },
            new Pizza{ Id =4, Name ="Mexicaine", Price=12, Ingredients = new List<Ingredient>(){
                new () {Id = 12, PizzaId = 4, Name = "boeuf"},
                new () {Id = 13, PizzaId = 4, Name = "mozzarella"},
                new () {Id = 14, PizzaId = 4, Name = "maïs"},
                new () {Id = 15, PizzaId = 4, Name = "tomates"},
                new () {Id = 16, PizzaId = 4, Name = "oignon"},
                new () {Id = 17, PizzaId = 4, Name = "coriandre" },
            }, ImageLink = "/images/meaty.jpg"  },
            new Pizza{ Id =5, Name ="Reine", Price=11, Ingredients = new List<Ingredient>(){
                new () {Id = 18, PizzaId = 5, Name = "jambon"},
                new () {Id = 19, PizzaId = 5, Name = "champignons"},
                new () {Id = 20, PizzaId = 5, Name = "mozzarella" },
            }, ImageLink = "/images/mushroom.jpg"  },
            new Pizza{ Id =6, Name ="Pepperoni", Price=11, Ingredients = new List<Ingredient>(){
                new () {Id = 21, PizzaId = 6, Name = "mozzarella"},
                new () {Id = 22, PizzaId = 6, Name = "pepperoni"},
                new () {Id = 23, PizzaId = 6, Name = "tomates" },
            }, ImageLink = "/images/pepperoni.jpg"  },
            new Pizza{ Id =7, Name ="Végétarienne",Price = 10, Ingredients = new List<Ingredient>(){
                new () {Id = 24, PizzaId = 7, Name = "champignons"},
                new () {Id = 25, PizzaId = 7, Name = "roquette"},
                new () {Id = 26, PizzaId = 7, Name = "artichauts"},
                new () {Id = 27, PizzaId = 7, Name = "aubergine" }
            }, ImageLink = "/images/veggie.jpg"  },
        };
    }
}
